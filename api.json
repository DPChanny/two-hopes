{
  "openapi": "3.1.0",
  "info": {
    "title": "FastAPI",
    "version": "0.1.0"
  },
  "paths": {
    "/api/group/": {
      "post": {
        "summary": "Add Group Route",
        "operationId": "add_group_route_api_group__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddGroupRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGroupDetailResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Group List Route",
        "operationId": "get_group_list_route_api_group__get",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Name"
            }
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "title": "Location"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGroupListResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/group/{group_id}": {
      "get": {
        "summary": "Get Group Detail Route",
        "operationId": "get_group_detail_route_api_group__group_id__get",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGroupDetailResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update Group Route",
        "operationId": "update_group_route_api_group__group_id__patch",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateGroupRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetGroupDetailResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Group Route",
        "operationId": "delete_group_route_api_group__group_id__delete",
        "parameters": [
          {
            "name": "group_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseDTO_NoneType_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/crop/": {
      "post": {
        "summary": "Add Crop Route",
        "operationId": "add_crop_route_api_crop__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCropRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCropDetailResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Crop List Route",
        "operationId": "get_crop_list_route_api_crop__get",
        "parameters": [
          {
            "name": "group_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCropListResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/crop/{crop_id}": {
      "get": {
        "summary": "Get Crop Detail Route",
        "operationId": "get_crop_detail_route_api_crop__crop_id__get",
        "parameters": [
          {
            "name": "crop_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Crop Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCropDetailResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update Crop Route",
        "operationId": "update_crop_route_api_crop__crop_id__patch",
        "parameters": [
          {
            "name": "crop_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Crop Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCropRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCropDetailResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Crop Route",
        "operationId": "delete_crop_route_api_crop__crop_id__delete",
        "parameters": [
          {
            "name": "crop_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Crop Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseDTO_NoneType_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/schedule/": {
      "post": {
        "summary": "Add Schedule Route",
        "operationId": "add_schedule_route_api_schedule__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddScheduleRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetScheduleDetailResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Schedule List Route",
        "operationId": "get_schedule_list_route_api_schedule__get",
        "parameters": [
          {
            "name": "group_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          },
          {
            "name": "crop_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Crop Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetScheduleListResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/schedule/{schedule_id}": {
      "get": {
        "summary": "Get Schedule Detail Route",
        "operationId": "get_schedule_detail_route_api_schedule__schedule_id__get",
        "parameters": [
          {
            "name": "schedule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Schedule Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetScheduleDetailResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update Schedule Route",
        "operationId": "update_schedule_route_api_schedule__schedule_id__patch",
        "parameters": [
          {
            "name": "schedule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Schedule Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateScheduleRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetScheduleDetailResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Schedule Route",
        "operationId": "delete_schedule_route_api_schedule__schedule_id__delete",
        "parameters": [
          {
            "name": "schedule_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Schedule Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseDTO_NoneType_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/sensor/": {
      "post": {
        "summary": "Add Sensor Route",
        "operationId": "add_sensor_route_api_sensor__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddSensorRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSensorDetailResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Sensor List Route",
        "operationId": "get_sensor_list_route_api_sensor__get",
        "parameters": [
          {
            "name": "group_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          },
          {
            "name": "crop_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Crop Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSensorListResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/sensor/{sensor_id}": {
      "get": {
        "summary": "Get Sensor Detail Route",
        "operationId": "get_sensor_detail_route_api_sensor__sensor_id__get",
        "parameters": [
          {
            "name": "sensor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Sensor Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSensorDetailResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update Sensor Route",
        "operationId": "update_sensor_route_api_sensor__sensor_id__patch",
        "parameters": [
          {
            "name": "sensor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Sensor Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateSensorRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSensorDetailResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Sensor Route",
        "operationId": "delete_sensor_route_api_sensor__sensor_id__delete",
        "parameters": [
          {
            "name": "sensor_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Sensor Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseDTO_NoneType_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/post/": {
      "post": {
        "summary": "Add Post Route",
        "operationId": "add_post_route_api_post__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPostRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPostDetailResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Post List Route",
        "operationId": "get_post_list_route_api_post__get",
        "parameters": [
          {
            "name": "group_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Group Id"
            }
          },
          {
            "name": "crop_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Crop Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPostListResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/post/{post_id}": {
      "get": {
        "summary": "Get Post Detail Route",
        "operationId": "get_post_detail_route_api_post__post_id__get",
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Post Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPostDetailResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update Post Route",
        "operationId": "update_post_route_api_post__post_id__patch",
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Post Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdatePostRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetPostDetailResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Post Route",
        "operationId": "delete_post_route_api_post__post_id__delete",
        "parameters": [
          {
            "name": "post_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Post Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseDTO_NoneType_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/comment/": {
      "post": {
        "summary": "Add Comment Route",
        "operationId": "add_comment_route_api_comment__post",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddCommentRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCommentDetailResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "get": {
        "summary": "Get Comment List Route",
        "operationId": "get_comment_list_route_api_comment__get",
        "parameters": [
          {
            "name": "post_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "title": "Post Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCommentListResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/api/comment/{comment_id}": {
      "get": {
        "summary": "Get Comment Detail Route",
        "operationId": "get_comment_detail_route_api_comment__comment_id__get",
        "parameters": [
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Comment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCommentDetailResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update Comment Route",
        "operationId": "update_comment_route_api_comment__comment_id__patch",
        "parameters": [
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Comment Id"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCommentRequestDTO"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetCommentDetailResponseDTO"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Comment Route",
        "operationId": "delete_comment_route_api_comment__comment_id__delete",
        "parameters": [
          {
            "name": "comment_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "title": "Comment Id"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BaseResponseDTO_NoneType_"
                }
              }
            }
          },
          "422": {
            "description": "Validation Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddCommentRequestDTO": {
        "properties": {
          "post_id": {
            "type": "integer",
            "title": "Post Id"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "author": {
            "type": "string",
            "title": "Author"
          }
        },
        "type": "object",
        "required": ["post_id", "content", "author"],
        "title": "AddCommentRequestDTO"
      },
      "AddCropRequestDTO": {
        "properties": {
          "group_id": {
            "type": "integer",
            "title": "Group Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "crop_type": {
            "type": "string",
            "enum": ["vegetable", "fruit", "grain", "herb", "flower"],
            "title": "Crop Type"
          }
        },
        "type": "object",
        "required": ["group_id", "name", "crop_type"],
        "title": "AddCropRequestDTO"
      },
      "AddGroupRequestDTO": {
        "properties": {
          "name": {
            "type": "string",
            "title": "Name"
          },
          "location": {
            "type": "string",
            "title": "Location"
          }
        },
        "type": "object",
        "required": ["name", "location"],
        "title": "AddGroupRequestDTO"
      },
      "AddPostRequestDTO": {
        "properties": {
          "crop_id": {
            "type": "integer",
            "title": "Crop Id"
          },
          "content": {
            "type": "string",
            "title": "Content"
          }
        },
        "type": "object",
        "required": ["crop_id", "content"],
        "title": "AddPostRequestDTO"
      },
      "AddScheduleRequestDTO": {
        "properties": {
          "crop_id": {
            "type": "integer",
            "title": "Crop Id"
          },
          "weekday": {
            "type": "string",
            "enum": ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"],
            "title": "Weekday"
          },
          "start_time": {
            "type": "string",
            "format": "time",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "format": "time",
            "title": "End Time"
          },
          "author": {
            "type": "string",
            "title": "Author"
          }
        },
        "type": "object",
        "required": ["crop_id", "weekday", "start_time", "end_time", "author"],
        "title": "AddScheduleRequestDTO"
      },
      "AddSensorRequestDTO": {
        "properties": {
          "crop_id": {
            "type": "integer",
            "title": "Crop Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "sensor_type": {
            "type": "string",
            "enum": ["temperature", "humidity", "light", "ph", "co2"],
            "title": "Sensor Type"
          }
        },
        "type": "object",
        "required": ["crop_id", "name", "sensor_type"],
        "title": "AddSensorRequestDTO"
      },
      "BaseResponseDTO_NoneType_": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "code": {
            "type": "integer",
            "title": "Code"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "type": "null",
            "title": "Data"
          }
        },
        "type": "object",
        "required": ["success", "code", "message"],
        "title": "BaseResponseDTO[NoneType]"
      },
      "CommentDTO": {
        "properties": {
          "comment_id": {
            "type": "integer",
            "title": "Comment Id"
          },
          "post_id": {
            "type": "integer",
            "title": "Post Id"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "author": {
            "type": "string",
            "title": "Author"
          }
        },
        "type": "object",
        "required": ["comment_id", "post_id", "content", "author"],
        "title": "CommentDTO"
      },
      "CommentDetailDTO": {
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "comment_id": {
            "type": "integer",
            "title": "Comment Id"
          },
          "post_id": {
            "type": "integer",
            "title": "Post Id"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "author": {
            "type": "string",
            "title": "Author"
          }
        },
        "type": "object",
        "required": [
          "created_at",
          "updated_at",
          "comment_id",
          "post_id",
          "content",
          "author"
        ],
        "title": "CommentDetailDTO"
      },
      "CropDTO": {
        "properties": {
          "crop_id": {
            "type": "integer",
            "title": "Crop Id"
          },
          "group_id": {
            "type": "integer",
            "title": "Group Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "crop_type": {
            "$ref": "#/components/schemas/CropType"
          },
          "harvest": {
            "type": "boolean",
            "title": "Harvest"
          }
        },
        "type": "object",
        "required": ["crop_id", "group_id", "name", "crop_type", "harvest"],
        "title": "CropDTO"
      },
      "CropDetailDTO": {
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "crop_id": {
            "type": "integer",
            "title": "Crop Id"
          },
          "group_id": {
            "type": "integer",
            "title": "Group Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "crop_type": {
            "$ref": "#/components/schemas/CropType"
          },
          "harvest": {
            "type": "boolean",
            "title": "Harvest"
          },
          "posts": {
            "items": {
              "$ref": "#/components/schemas/PostDTO"
            },
            "type": "array",
            "title": "Posts"
          },
          "schedules": {
            "items": {
              "$ref": "#/components/schemas/ScheduleDTO"
            },
            "type": "array",
            "title": "Schedules"
          },
          "sensors": {
            "items": {
              "$ref": "#/components/schemas/SensorDTO"
            },
            "type": "array",
            "title": "Sensors"
          }
        },
        "type": "object",
        "required": [
          "created_at",
          "updated_at",
          "crop_id",
          "group_id",
          "name",
          "crop_type",
          "harvest",
          "posts",
          "schedules",
          "sensors"
        ],
        "title": "CropDetailDTO"
      },
      "CropType": {
        "type": "string",
        "enum": ["vegetable", "fruit", "grain", "herb", "flower"],
        "title": "CropType"
      },
      "GetCommentDetailResponseDTO": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "code": {
            "type": "integer",
            "title": "Code"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CommentDetailDTO"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": ["success", "code", "message"],
        "title": "GetCommentDetailResponseDTO"
      },
      "GetCommentListResponseDTO": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "code": {
            "type": "integer",
            "title": "Code"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CommentDTO"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          }
        },
        "type": "object",
        "required": ["success", "code", "message"],
        "title": "GetCommentListResponseDTO"
      },
      "GetCropDetailResponseDTO": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "code": {
            "type": "integer",
            "title": "Code"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/CropDetailDTO"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": ["success", "code", "message"],
        "title": "GetCropDetailResponseDTO"
      },
      "GetCropListResponseDTO": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "code": {
            "type": "integer",
            "title": "Code"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/CropDTO"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          }
        },
        "type": "object",
        "required": ["success", "code", "message"],
        "title": "GetCropListResponseDTO"
      },
      "GetGroupDetailResponseDTO": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "code": {
            "type": "integer",
            "title": "Code"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/GroupDetailDTO"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": ["success", "code", "message"],
        "title": "GetGroupDetailResponseDTO"
      },
      "GetGroupListResponseDTO": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "code": {
            "type": "integer",
            "title": "Code"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/GroupDTO"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          }
        },
        "type": "object",
        "required": ["success", "code", "message"],
        "title": "GetGroupListResponseDTO"
      },
      "GetPostDetailResponseDTO": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "code": {
            "type": "integer",
            "title": "Code"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/PostDetailDTO"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": ["success", "code", "message"],
        "title": "GetPostDetailResponseDTO"
      },
      "GetPostListResponseDTO": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "code": {
            "type": "integer",
            "title": "Code"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/PostDTO"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          }
        },
        "type": "object",
        "required": ["success", "code", "message"],
        "title": "GetPostListResponseDTO"
      },
      "GetScheduleDetailResponseDTO": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "code": {
            "type": "integer",
            "title": "Code"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/ScheduleDetailDTO"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": ["success", "code", "message"],
        "title": "GetScheduleDetailResponseDTO"
      },
      "GetScheduleListResponseDTO": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "code": {
            "type": "integer",
            "title": "Code"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/ScheduleDTO"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          }
        },
        "type": "object",
        "required": ["success", "code", "message"],
        "title": "GetScheduleListResponseDTO"
      },
      "GetSensorDetailResponseDTO": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "code": {
            "type": "integer",
            "title": "Code"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/SensorDetailDTO"
              },
              {
                "type": "null"
              }
            ]
          }
        },
        "type": "object",
        "required": ["success", "code", "message"],
        "title": "GetSensorDetailResponseDTO"
      },
      "GetSensorListResponseDTO": {
        "properties": {
          "success": {
            "type": "boolean",
            "title": "Success"
          },
          "code": {
            "type": "integer",
            "title": "Code"
          },
          "message": {
            "type": "string",
            "title": "Message"
          },
          "data": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/SensorDTO"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Data"
          }
        },
        "type": "object",
        "required": ["success", "code", "message"],
        "title": "GetSensorListResponseDTO"
      },
      "GroupDTO": {
        "properties": {
          "group_id": {
            "type": "integer",
            "title": "Group Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "location": {
            "type": "string",
            "title": "Location"
          }
        },
        "type": "object",
        "required": ["group_id", "name", "location"],
        "title": "GroupDTO"
      },
      "GroupDetailDTO": {
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "group_id": {
            "type": "integer",
            "title": "Group Id"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "location": {
            "type": "string",
            "title": "Location"
          },
          "crops": {
            "items": {
              "$ref": "#/components/schemas/CropDetailDTO"
            },
            "type": "array",
            "title": "Crops"
          }
        },
        "type": "object",
        "required": [
          "created_at",
          "updated_at",
          "group_id",
          "name",
          "location",
          "crops"
        ],
        "title": "GroupDetailDTO"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "type": "array",
            "title": "Detail"
          }
        },
        "type": "object",
        "title": "HTTPValidationError"
      },
      "PostDTO": {
        "properties": {
          "post_id": {
            "type": "integer",
            "title": "Post Id"
          },
          "crop_id": {
            "type": "integer",
            "title": "Crop Id"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "image_url": {
            "type": "string",
            "title": "Image Url"
          },
          "author": {
            "type": "string",
            "title": "Author"
          }
        },
        "type": "object",
        "required": ["post_id", "crop_id", "content", "image_url", "author"],
        "title": "PostDTO"
      },
      "PostDetailDTO": {
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "post_id": {
            "type": "integer",
            "title": "Post Id"
          },
          "crop_id": {
            "type": "integer",
            "title": "Crop Id"
          },
          "content": {
            "type": "string",
            "title": "Content"
          },
          "image_url": {
            "type": "string",
            "title": "Image Url"
          },
          "author": {
            "type": "string",
            "title": "Author"
          },
          "comments": {
            "items": {
              "$ref": "#/components/schemas/CommentDetailDTO"
            },
            "type": "array",
            "title": "Comments"
          }
        },
        "type": "object",
        "required": [
          "created_at",
          "updated_at",
          "post_id",
          "crop_id",
          "content",
          "image_url",
          "author",
          "comments"
        ],
        "title": "PostDetailDTO"
      },
      "ScheduleDTO": {
        "properties": {
          "schedule_id": {
            "type": "integer",
            "title": "Schedule Id"
          },
          "crop_id": {
            "type": "integer",
            "title": "Crop Id"
          },
          "weekday": {
            "$ref": "#/components/schemas/Weekday"
          },
          "start_time": {
            "type": "string",
            "format": "time",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "format": "time",
            "title": "End Time"
          },
          "author": {
            "type": "string",
            "title": "Author"
          }
        },
        "type": "object",
        "required": [
          "schedule_id",
          "crop_id",
          "weekday",
          "start_time",
          "end_time",
          "author"
        ],
        "title": "ScheduleDTO"
      },
      "ScheduleDetailDTO": {
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "schedule_id": {
            "type": "integer",
            "title": "Schedule Id"
          },
          "crop_id": {
            "type": "integer",
            "title": "Crop Id"
          },
          "weekday": {
            "$ref": "#/components/schemas/Weekday"
          },
          "start_time": {
            "type": "string",
            "format": "time",
            "title": "Start Time"
          },
          "end_time": {
            "type": "string",
            "format": "time",
            "title": "End Time"
          },
          "author": {
            "type": "string",
            "title": "Author"
          }
        },
        "type": "object",
        "required": [
          "created_at",
          "updated_at",
          "schedule_id",
          "crop_id",
          "weekday",
          "start_time",
          "end_time",
          "author"
        ],
        "title": "ScheduleDetailDTO"
      },
      "SensorDTO": {
        "properties": {
          "sensor_id": {
            "type": "integer",
            "title": "Sensor Id"
          },
          "crop_id": {
            "type": "integer",
            "title": "Crop Id"
          },
          "value": {
            "type": "string",
            "title": "Value"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "sensor_type": {
            "$ref": "#/components/schemas/SensorType"
          }
        },
        "type": "object",
        "required": ["sensor_id", "crop_id", "value", "name", "sensor_type"],
        "title": "SensorDTO"
      },
      "SensorDetailDTO": {
        "properties": {
          "created_at": {
            "type": "string",
            "format": "date-time",
            "title": "Created At"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time",
            "title": "Updated At"
          },
          "sensor_id": {
            "type": "integer",
            "title": "Sensor Id"
          },
          "crop_id": {
            "type": "integer",
            "title": "Crop Id"
          },
          "value": {
            "type": "string",
            "title": "Value"
          },
          "name": {
            "type": "string",
            "title": "Name"
          },
          "sensor_type": {
            "$ref": "#/components/schemas/SensorType"
          }
        },
        "type": "object",
        "required": [
          "created_at",
          "updated_at",
          "sensor_id",
          "crop_id",
          "value",
          "name",
          "sensor_type"
        ],
        "title": "SensorDetailDTO"
      },
      "SensorType": {
        "type": "string",
        "enum": ["temperature", "humidity", "light", "ph", "co2"],
        "title": "SensorType"
      },
      "UpdateCommentRequestDTO": {
        "properties": {
          "content": {
            "type": "string",
            "title": "Content"
          }
        },
        "type": "object",
        "required": ["content"],
        "title": "UpdateCommentRequestDTO"
      },
      "UpdateCropRequestDTO": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "crop_type": {
            "anyOf": [
              {
                "type": "string",
                "enum": ["vegetable", "fruit", "grain", "herb", "flower"]
              },
              {
                "type": "null"
              }
            ],
            "title": "Crop Type"
          },
          "harvest": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "title": "Harvest"
          }
        },
        "type": "object",
        "title": "UpdateCropRequestDTO"
      },
      "UpdateGroupRequestDTO": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "location": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Location"
          }
        },
        "type": "object",
        "title": "UpdateGroupRequestDTO"
      },
      "UpdatePostRequestDTO": {
        "properties": {
          "content": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Content"
          },
          "image_url": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Image Url"
          },
          "author": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author"
          }
        },
        "type": "object",
        "title": "UpdatePostRequestDTO"
      },
      "UpdateScheduleRequestDTO": {
        "properties": {
          "weekday": {
            "anyOf": [
              {
                "type": "string",
                "enum": ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"]
              },
              {
                "type": "null"
              }
            ],
            "title": "Weekday"
          },
          "start_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "Start Time"
          },
          "end_time": {
            "anyOf": [
              {
                "type": "string",
                "format": "time"
              },
              {
                "type": "null"
              }
            ],
            "title": "End Time"
          },
          "author": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Author"
          }
        },
        "type": "object",
        "title": "UpdateScheduleRequestDTO"
      },
      "UpdateSensorRequestDTO": {
        "properties": {
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "sensor_type": {
            "anyOf": [
              {
                "type": "string",
                "enum": ["temperature", "humidity", "light", "ph", "co2"]
              },
              {
                "type": "null"
              }
            ],
            "title": "Sensor Type"
          },
          "value": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Value"
          }
        },
        "type": "object",
        "title": "UpdateSensorRequestDTO"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "type": "array",
            "title": "Location"
          },
          "msg": {
            "type": "string",
            "title": "Message"
          },
          "type": {
            "type": "string",
            "title": "Error Type"
          }
        },
        "type": "object",
        "required": ["loc", "msg", "type"],
        "title": "ValidationError"
      },
      "Weekday": {
        "type": "string",
        "enum": ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"],
        "title": "Weekday"
      }
    }
  }
}
